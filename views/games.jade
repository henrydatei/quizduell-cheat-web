extends layout

block content
  div(class='header')
    h2 Quizduell Cheat - Games
    
  div(class='list-of-games')
    - for (var i = 0; i < numberOfGames; i++) {
    div(class='game', onclick="showGameID("+gameIDs[i]+",'"+username+"','"+opponents[i]+"', '"+password+"')")
      div(class='gameID')= 'GameID: '+gameIDs[i]
      if yourturns[i] == true
        div(class='yourturn')= ' '
      else 
        div(class='notyourturn')= ' '
      div(class='opponent')= username+' gegen '+opponents[i]+' ['+points[i]+', Runde '+rounds[i]+']'
      hr
    - }

  script.
    Element.prototype.remove = function() {
      this.parentElement.removeChild(this);
    }
    NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
      for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
          this[i].parentElement.removeChild(this[i]);
        }
      }
    }  
    function showGameID(gameID, name, opponent, password) {
      // alert(gameID);
      // entfernen des alten Divs
      document.getElementsByClassName("single-game").remove();
      
      // neu Erstellen des Divs
      var div = document.createElement("div");
      div.className = "single-game";
      document.body.appendChild(div);
      var div2 = document.createElement("div");
      div2.className = "overview";
      div2.innerHTML = name+" gegen "+opponent;
      document.getElementsByClassName('single-game')[0].appendChild(div2);
      var div3 = document.createElement("div");
      div3.className = "buttons";
      document.getElementsByClassName('single-game')[0].appendChild(div3);
      //- var button1 = document.createElement("button");
      //- button1.type = "button";
      //- button1.name = "legit";
      //- button1.innerHTML = "Legit-Bot";
      //- document.getElementsByClassName('single-game')[0].appendChild(button1);
      //- var button2 = document.createElement("button");
      //- button2.type = "button";
      //- button2.name = "perfect-game";
      //- button2.innerHTML = "Perfect-Game-Bot";
      //- document.getElementsByClassName('single-game')[0].appendChild(button2);
      
      // shows all questions with answers
      prepareData(name, password, gameID, opponent);
      //console.log(rawData);
      //var categorys = getCategorys(rawData);
      //console.log(categorys);
    }
    
    function countZerosInArray(array) {
      var counter = 0;
      for (var i = 0; i < array.length; i++) {
        if (array[i] == 0) {
          counter++;
        }
      }
      return counter;
    }
    
    function overwriteArray(array) {
      var template = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
      for (var i = 0; i < array.length; i++) {
        template[i] = array[i];
      }
      return template;
    }
    
    function prepareData(username, password, gameID, opponent) {
      // holen der Rohdaten
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          // Typical action to be performed when the document is ready:
          var rawData = xhttp.responseText;
          
          // Kategorien
          var json = JSON.parse(rawData);
          var categorys = [];
          for (var i = 0; i < 18; i++) {
            var category = json.game.questions[3*i].cat_name;
            categorys.push(category);
          }
          console.log(categorys);
          
          // Fragen
          var data = [];
          for (var j = 0; j < 54; j++) {
            var question = json.game.questions[j].question;
            var right = json.game.questions[j].correct;
            var wrong1 = json.game.questions[j].wrong1;
            var wrong2 = json.game.questions[j].wrong2;
            var wrong3 = json.game.questions[j].wrong3;
            data.push(question);
            data.push(right);
            data.push(wrong1);
            data.push(wrong2);
            data.push(wrong3);
          }
          console.log(data);
          
          // progress data
          
          var yourAnswers = json.game.your_answers;
          yourAnswersFilled = overwriteArray(yourAnswers);
          yourAnswersFilled.push(countZerosInArray(yourAnswers))
          var opponentAnswers = json.game.opponent_answers;
          opponentAnswersFilled = overwriteArray(opponentAnswers);
          opponentAnswersFilled.push(countZerosInArray(opponentAnswers))
          var progressData = yourAnswersFilled.concat(opponentAnswersFilled);
          
          // displays the "histroy" of the games
          showGameProcess(username, opponent, progressData)
          
          // shows all questions with answers
          showQuestions(categorys, data);
        }
      };
      xhttp.open("GET", "getAnswers?gameID="+gameID+"&username="+username+"&password="+password, true);
      xhttp.send();
    }
    
    function showQuestions(categorys, data) {
      // var categorys = ["cat 1", " cat 2", "cat 3"];
      // var data = Array.from(Array(categorys.length*15+1).keys());
      
      var divQuestions = document.createElement("div");
      divQuestions.id = "questions";
      divQuestions.className = "questions";
      document.getElementsByClassName('single-game')[0].appendChild(divQuestions);
      
      var table = document.createElement("table");
      table.id = "questionTable";
      document.getElementById('questions').appendChild(table);
      
      for (var i = 0; i < categorys.length; i++) {
        var tr = document.createElement("tr");
        tr.id = i+"0";
        document.getElementById('questionTable').appendChild(tr);
        var td = document.createElement("td");
        td.className = "category";
        td.colSpan = "5";
        td.innerHTML = categorys[i];
        document.getElementById(i+"0").appendChild(td)
        
        var j = i*15;
        for (var frage = 1; frage <= 3; frage++) {
          var trFrage = document.createElement("tr");
          trFrage.id = i+frage.toString();
          document.getElementById('questionTable').appendChild(trFrage);
          var tdQuestion = document.createElement("td");
          tdQuestion.className = "question";
          tdQuestion.innerHTML = data[j];
          j++;
          document.getElementById(i+frage.toString()).appendChild(tdQuestion);
          var tdRight = document.createElement("td");
          tdRight.className = "right answer";
          tdRight.innerHTML = data[j];
          j++;
          document.getElementById(i+frage.toString()).appendChild(tdRight);
          var tdWrong1 = document.createElement("td");
          tdWrong1.className = "wrong answer";
          tdWrong1.innerHTML = data[j];
          j++;
          document.getElementById(i+frage.toString()).appendChild(tdWrong1);
          var tdWrong2 = document.createElement("td");
          tdWrong2.className = "wrong answer";
          tdWrong2.innerHTML = data[j];
          j++;
          document.getElementById(i+frage.toString()).appendChild(tdWrong2);
          var tdWrong3 = document.createElement("td");
          tdWrong3.className = "wrong answer";
          tdWrong3.innerHTML = data[j];
          j++;
          document.getElementById(i+frage.toString()).appendChild(tdWrong3);
        }
        var trLeer = document.createElement("tr");
        trLeer.id = i+"4";
        document.getElementById('questionTable').appendChild(trLeer);
        var tdLeer = document.createElement("td");
        tdLeer.className = "category";
        tdLeer.colSpan = "5";
        tdLeer.innerHTML = "&nbsp;";
        document.getElementById(i+"4").appendChild(tdLeer)
      }
    }
    
    function showGameProcess(name, opponent, data) {
      //data = [1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,-1,-1,18, 1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,-1,-1,18]
      var divProgress = document.createElement("div");
      divProgress.id = "gameStatus";
      divProgress.className = "gameStatus";
      document.getElementsByClassName('single-game')[0].appendChild(divProgress);
    
      var table = document.createElement("table");
      table.id = "progressTable";
      document.getElementById('gameStatus').appendChild(table);
    
      // first row
      var tr = document.createElement("tr");
      tr.id = "above-row";
      document.getElementById('progressTable').appendChild(tr);
    
      var td = document.createElement("td");
      td.innerHTML = name;
      td.className = "playername";
      document.getElementById('above-row').appendChild(td);
      for (var i = 0; i < 18; i++) {
        var td = document.createElement("td");
        td.innerHTML = "&nbsp;";
        switch (data[i]) {
          case 0:
            // right answer
            if (i % 3 == 2) {
              td.className = "right-answer border";
            } else {
              td.className = "right-answer";
            }
            break;
          case -1:
            // no answer
            if (i % 3 == 2) {
              td.className = "no-answer border";
            } else {
              td.className = "no-answer";
            }
            break;
          default:
          // wrong answer
          if (i % 3 == 2) {
            td.className = "wrong-answer border";
          } else {
            td.className = "wrong-answer";
          }
            
        }
        document.getElementById('above-row').appendChild(td);
      }
      var td = document.createElement("td");
      td.innerHTML = data[18];
      document.getElementById('above-row').appendChild(td);
      
      // seconds row
      var tr = document.createElement("tr");
      tr.id = "below-row";
      document.getElementById('progressTable').appendChild(tr);
    
      var td = document.createElement("td");
      td.innerHTML = opponent;
      td.className = "playername";
      document.getElementById('below-row').appendChild(td);
      for (var i = 19; i < 37; i++) {
        var td = document.createElement("td");
        td.innerHTML = "&nbsp;";
        switch (data[i]) {
          case 0:
            // right answer
            if (i % 3 == 0) {
              td.className = "right-answer border";
            } else {
              td.className = "right-answer";
            }
            break;
          case -1:
            // no answer
            if (i % 3 == 0) {
              td.className = "no-answer border";
            } else {
              td.className = "no-answer";
            }
            break;
          default:
          // wrong answer
          if (i % 3 == 0) {
            td.className = "wrong-answer border";
          } else {
            td.className = "wrong-answer";
          }
            
        }
        document.getElementById('below-row').appendChild(td);
      }
      var td = document.createElement("td");
      td.innerHTML = data[37];
      document.getElementById('below-row').appendChild(td);
    }
